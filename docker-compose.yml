services:
  # --- Infrastructure Services ---
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 10s
      timeout: 5s
      retries: 5

  mysql:
    image: mysql:8.0
    container_name: mysql-db
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password
    volumes:
      - ./init-db:/docker-entrypoint-initdb.d # Runs the init.sql script on startup
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-ppassword"]
      interval: 10s
      timeout: 5s
      retries: 10

  # --- Spring Cloud Core Services ---
  discovery-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        JAR_FILE: discovery-service/target/discovery-service-*.jar
    container_name: discovery-service
    ports:
      - "8761:8761"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  # --- Business Microservices ---
  user-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        JAR_FILE: user-service/target/user-service-*.jar
    container_name: user-service
    depends_on:
      discovery-service:
        condition: service_healthy
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_USERNAME=user_enrollment_service_user
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update

  course-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        JAR_FILE: course-service/target/course-service-*.jar
    container_name: course-service
    depends_on:
      discovery-service:
        condition: service_healthy
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_USERNAME=user_enrollment_service_user
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update

  enrollment-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        JAR_FILE: enrollment-service/target/enrollment-service-*.jar
    container_name: enrollment-service
    depends_on:
      discovery-service:
        condition: service_healthy
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_USERNAME=user_enrollment_service_user
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update

  notification-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        JAR_FILE: notification-service/target/notification-service-*.jar
    container_name: notification-service
    depends_on:
      discovery-service:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  # --- API Gateway ---
  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        JAR_FILE: api-gateway/target/api-gateway-*.jar
    container_name: api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - discovery-service
      - user-service
      - course-service
      - enrollment-service